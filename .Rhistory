highlight = highlightOptions(
weight = 3,
fillOpacity = 0.9,
bringToFront = T)) %>% #to add hovering functionality check what she put for the highlight argument and to add popups, check what she put for the popup argument
addLegend(pal = pal,
values = ~Perc_StudentsE,
opacity = 0.7,
title = "Highest Percentage of Students in Charlottesville and Richmond regions for 2020",
position = "bottomleft")
HousingDataSpatial %>%
filter(County == "Henrico") %>%
ggplot(aes(x = NAME.y, y = Perc_StudentsE)) +
geom_col()
HousingDataSpatial %>%
filter(County == "Henrico") %>%
ggplot(aes(x = NAME.y, y = Perc_StudentsE)) +
geom_col() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
Tenure <- Tenure[, 3:9]
Tenure <- full_join(Tenure, Tenure_By_Race, by = "County_fips")
Tenure %>%
mutate(Perc_rentersE = (RentersE/Total_OccupantsE)) %>%
group_by(County) %>%
summarize(Median_Perc_Renters = median(Perc_rentersE, na.rm = TRUE), Median_Perc_WRenters = median((White_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_WOwners = median((White_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BRenters = median((Black_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BOwners = median((Black_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmOwners = median((NativeAm_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmRenters = median((NativeAm_rentersE/Total_OccupantsE), na.rm = TRUE),  Median_Perc_AsianOwners = median((Asian_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_AsianRenters = median((Asian_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderOwner = median((PacificIslander_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderRenter = median((PacificIslander_renterE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLatinoOwner = median((HispanicLatino_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLationRenterE = median((HispanicLation_renterE/Total_OccupantsE), na.rm = TRUE)) %>%
mutate(across(c(2:14), scales::percent))
Tenure <- read_csv("Tenure.csv")
Tenure <- Tenure[, 3:9]
Tenure <- full_join(Tenure, Tenure_By_Race, by = "County_fips")
Tenure %>%
mutate(Perc_rentersE = (RentersE/Total_OccupantsE)) %>%
group_by(County) %>%
summarize(Median_Perc_Renters = median(Perc_rentersE, na.rm = TRUE), Median_Perc_WRenters = median((White_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_WOwners = median((White_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BRenters = median((Black_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BOwners = median((Black_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmOwners = median((NativeAm_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmRenters = median((NativeAm_rentersE/Total_OccupantsE), na.rm = TRUE),  Median_Perc_AsianOwners = median((Asian_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_AsianRenters = median((Asian_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderOwner = median((PacificIslander_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderRenter = median((PacificIslander_renterE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLatinoOwner = median((HispanicLatino_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLationRenterE = median((HispanicLation_renterE/Total_OccupantsE), na.rm = TRUE)) %>%
mutate(across(c(2:14), scales::percent))
Tenure %>%
mutate(Median_Perc_WRenters = (White_rentersE/Total_OccupantsE), Median_Perc_WOwners = (White_ownersE/Total_OccupantsE), Median_Perc_BRenters = (Black_rentersE/Total_OccupantsE), Median_Perc_BOwners =(Black_ownersE/Total_OccupantsE), Median_Perc_NativeAmOwners = (NativeAm_ownersE/Total_OccupantsE), Median_Perc_NativeAmRenters = (NativeAm_rentersE/Total_OccupantsE),  Median_Perc_AsianOwners = m(Asian_ownersE/Total_OccupantsE), Median_Perc_AsianRenters = (Asian_rentersE/Total_OccupantsE), Median_Perc_PacificIslanderOwner = (PacificIslander_ownerE/Total_OccupantsE), Median_Perc_PacificIslanderRenter = (PacificIslander_renterE/Total_OccupantsE), Median_Perc_HispanicLatinoOwner = (HispanicLatino_ownerE/Total_OccupantsE), Median_Perc_HispanicLationRenterE = (HispanicLation_renterE/Total_OccupantsE))
Tenure %>%
mutate(Median_Perc_WRenters = (White_rentersE/Total_OccupantsE), Median_Perc_WOwners = (White_ownersE/Total_OccupantsE), Median_Perc_BRenters = (Black_rentersE/Total_OccupantsE), Median_Perc_BOwners =(Black_ownersE/Total_OccupantsE), Median_Perc_NativeAmOwners = (NativeAm_ownersE/Total_OccupantsE), Median_Perc_NativeAmRenters = (NativeAm_rentersE/Total_OccupantsE),  Median_Perc_AsianOwners = (Asian_ownersE/Total_OccupantsE), Median_Perc_AsianRenters = (Asian_rentersE/Total_OccupantsE), Median_Perc_PacificIslanderOwner = (PacificIslander_ownerE/Total_OccupantsE), Median_Perc_PacificIslanderRenter = (PacificIslander_renterE/Total_OccupantsE), Median_Perc_HispanicLatinoOwner = (HispanicLatino_ownerE/Total_OccupantsE), Median_Perc_HispanicLationRenterE = (HispanicLation_renterE/Total_OccupantsE))
Tenure %>%
mutate(Median_Perc_WRenters = (White_rentersE/Total_OccupantsE), Median_Perc_WOwners = (White_ownersE/Total_OccupantsE), Median_Perc_BRenters = (Black_rentersE/Total_OccupantsE), Median_Perc_BOwners =(Black_ownersE/Total_OccupantsE), Median_Perc_NativeAmOwners = (NativeAm_ownersE/Total_OccupantsE), Median_Perc_NativeAmRenters = (NativeAm_rentersE/Total_OccupantsE),  Median_Perc_AsianOwners = (Asian_ownersE/Total_OccupantsE), Median_Perc_AsianRenters = (Asian_rentersE/Total_OccupantsE), Median_Perc_PacificIslanderOwner = (PacificIslander_ownerE/Total_OccupantsE), Median_Perc_PacificIslanderRenter = (PacificIslander_renterE/Total_OccupantsE), Median_Perc_HispanicLatinoOwner = (HispanicLatino_ownerE/Total_OccupantsE), Median_Perc_HispanicLationRenterE = (HispanicLation_renterE/Total_OccupantsE),
across(c(36:47), scales::percent))
library(spatstat)
install.packages("spatstat")
#install.packages("spatstat")
library(spatstat)
#install.packages("spatstat")
library(spatstat)
snow <- read.table("C:/Users/smang/OneDrive/Downloads/SNOW_in_square_region.dat", header = TRUE)
class(snow)
head(snow)
snow <- read.table("C:/Users/smang/OneDrive/Downloads/SNOW_in_square_region.dat", header = TRUE)
class(snow)
head(snow)
summary(snow$d1)
summary(snow$d2)
snow_ppp<-ppp(x=snow$d1, y=snow$d2, xlim, ylim) # note the change to x, y notation
xlim <- c(0, 500)
ylim <- c(0, 500)
snow_ppp<-ppp(x=snow$d1, y=snow$d2, xlim, ylim) # note the change to x, y notation
class(snow)
snow_ppp <- ppp(x=snow$d1, y=snow$d2, xlim, ylim) # note the change to x, y notation
class(snow)
class(snow_ppp)
summary(snow_ppp)
plot(snow_ppp)
#importing data
library(readr)
library(tidycensus)
library(tidyverse)
library(tigris)
library(leaflet)
library(sf)
library(DT)
ACS_Housing_Data <- read_csv("Housing_Data.csv")
Income_By_Tenure <- read_csv("Income_By_Tenure.csv")
Tenure <- read_csv("Tenure.csv")
Tenure_By_Income <- read_csv("Tenure_By_Income.csv")
Tenure_By_Race <- read_csv("Tenurebyrace.csv")
Poverty_By_Race <- read_csv("PovertyByRace.csv")
# Tenure <- Tenure[, 3:9]
# Tenure <- full_join(Tenure, Tenure_By_Race, by = "County_fips")
Tenure_By_Race_Perc <- Tenure_By_Race %>%
mutate(Perc_rentersE = (RentersE/Total_OccupantsE), Perc_ownersE = (OwnersE/Total_OccupantsE)) %>%
group_by(County) %>%
summarize(Renters = median(Perc_rentersE, na.rm = TRUE), Owners = median(Perc_ownersE, na.rm = TRUE), White_Renters = median((White_rentersE/RentersE), na.rm = TRUE), White_Owners = median((White_ownersE/OwnersE), na.rm = TRUE), Black_Renters = median((Black_rentersE/RentersE), na.rm = TRUE), Black_Owners = median((Black_ownersE/OwnersE), na.rm = TRUE), NativeAm_Owners = median((NativeAm_ownersE/OwnersE), na.rm = TRUE), NativeAm_Renters = median((NativeAm_rentersE/RentersE), na.rm = TRUE),  Asian_Owners = median((Asian_ownersE/OwnersE), na.rm = TRUE), Asian_Renters = median((Asian_rentersE/RentersE), na.rm = TRUE), PacificIslander_Owners = median((PacificIslander_ownerE/OwnersE), na.rm = TRUE), PacificIslander_Renters = median((PacificIslander_renterE/RentersE), na.rm = TRUE), HispanicLatino_Owners = median((HispanicLatino_ownerE/OwnersE), na.rm = TRUE), HispanicLatino_Renters = median((HispanicLation_renterE/RentersE), na.rm = TRUE)) %>%
mutate(across(c(2:14), scales::percent)) %>%
arrange(desc(Renters)) %>%
select(1:3,4,6,9,11,13,15,5,7,8,10,12,14)
sketch = htmltools::withTags(table(
class = 'display',
thead(
tr(
th(rowspan = 2, 'County'),
th(colspan = 6, 'Renters'),
th(colspan = 6, 'Owners')
),
tr(
lapply(rep(c('White_Renters', 'Black_Renters', 'NativeAm_Renters', 'Asian_Renters', "PacificIslander_Renters", "HispanicLatino_Renters", 'White_Owners', 'Black_Owners', 'NativeAm_Owners', 'Asian_Owners', "PacificIslander_Owners", "HispanicLatino_Owners"), 2), th)
)
)
))
datatable(Tenure_By_Race_Perc[,c(1,4:15)],
caption = htmltools::tags$caption(
style = 'caption-side: bottom; text-align: center;',
'Table 1: ', htmltools::em('Median Percentage of Renters and Owners in Each County (by Demographics)')),
filter = 'top',
container = sketch,
rownames = FALSE)
full_join(Tenure_perc_by_race, ACS_Housing_Data, by = "GEOID")
Tenure_perc_by_race <- Tenure_By_Race %>%
mutate(Perc_WRenters = (White_rentersE/RentersE), Perc_WOwners = (White_ownersE/OwnersE), Perc_BRenters = (Black_rentersE/RentersE), Perc_BOwners = (Black_ownersE/OwnersE), Perc_NativeAmOwners = (NativeAm_ownersE/OwnersE), Perc_NativeAmRenters = (NativeAm_rentersE/RentersE),  Perc_AsianOwners = (Asian_ownersE/OwnersE), Perc_AsianRenters = (Asian_rentersE/RentersE), Perc_PacificIslanderOwner = (PacificIslander_ownerE/OwnersE), Perc_PacificIslanderRenter = (PacificIslander_renterE/RentersE), Perc_HispanicLatinoOwner = (HispanicLatino_ownerE/OwnersE), Perc_HispanicLationRenterE = (HispanicLation_renterE/RentersE)) %>%
select(1:5, 48:59)
Tenure_perc_by_race <- Tenure_perc_by_race %>%
pivot_longer(., cols = c(Perc_AsianOwners, Perc_WRenters, Perc_WOwners, Perc_BOwners, Perc_BRenters, Perc_NativeAmOwners, Perc_NativeAmRenters, Perc_AsianRenters, Perc_PacificIslanderOwner, Perc_PacificIslanderRenter, Perc_HispanicLatinoOwner, Perc_HispanicLationRenterE), names_to = "Variable", values_to = "Percentage (Estimated)") %>%
mutate(Race = case_when(
str_detect(Variable, "Asian") ~ "Asian",
str_detect(Variable, "B") ~ "Black",
str_detect(Variable, "NativeAm") ~ "Native American",
str_detect(Variable, "PacificIslander") ~ "Pacific Islander",
str_detect(Variable, "Hispanic") ~ "Hispanic or Latino",
str_detect(Variable, "WRenters") ~ "White",
str_detect(Variable, "WOwners") ~ "White"
),
Variable = case_when(
str_detect(Variable, "Owner") ~ "Owner",
str_detect(Variable, "Renter") ~ "Renter"
))
Tenure_perc_by_race <- rename(Tenure_perc_by_race, Tenure_Type = Variable)
Tenure_perc_by_race$`Percentage (Estimated)` <- round(Tenure_perc_by_race$`Percentage (Estimated)`, 3)
Tenure_perc_by_race %>%
ggplot(aes(x = Tenure_Type, y = `Percentage (Estimated)`)) +
geom_boxplot() +
facet_wrap(~Race)
#Same graph different output
Tenure_perc_by_race %>%
ggplot(aes(x = Tenure_Type, y = `Percentage (Estimated)`, fill = Race)) +
geom_boxplot() +
facet_wrap(~County) #much easier to see without this funcdtion, but jsut for comparison purposes
full_join(Tenure_perc_by_race, ACS_Housing_Data, by = "GEOID")
Tenure_and_Housing_Data <- full_join(Tenure_perc_by_race, ACS_Housing_Data, by = "GEOID")
View(ACS_Housing_Data)
View(Tenure_perc_by_race)
View(Tenure_perc_by_race)
Tenure_and_Housing_Data %>%
filter(Race == "Black") %>%
ggplot(aes(x = `Percentage (Estimated)`, y = RentTaxRatio, color = Tenure_Type)) +
geom_point()
Tenure_and_Housing_Data %>%
filter(Race == "Black") %>%
ggplot(aes(x = `Percentage (Estimated)`, y = RentTaxRatio, color = Tenure_Type)) +
geom_smooth()
Tenure_and_Housing_Data  %>%
ggplot(aes(x = `Percentage (Estimated)`, y = RentTaxRatio, color = Tenure_Type)) +
geom_smooth() %>%
facet_wrap(~Race)
Tenure_and_Housing_Data  %>%
ggplot(aes(x = `Percentage (Estimated)`, y = RentTaxRatio, color = Tenure_Type)) +
geom_smooth() +
facet_wrap(~Race)
ggplot(aes(x = `Percentage (Estimated)`, y = RentTaxRatio, color = Tenure_Type)) +
geom_smooth() +
facet_wrap(~Race)
Tenure_and_Housing_Data  %>%
filter(Tenure_Type == "Renter") %>%
ggplot(aes(x = `Percentage (Estimated)`, y = RentTaxRatio, color = Tenure_Type)) +
geom_smooth() +
facet_wrap(~Race)
Poverty_By_Race %>%
ggplot(aes(x = Perc_Total_BelowPovertyE, y = Gini_IndexE)) +
geom_point()
Poverty_By_Race %>%
ggplot(aes(x = Perc_Total_BelowPovertyE, y = Gini_IndexE, color = County)) +
geom_point()
Poverty_By_Race %>%
ggplot(aes(x = Perc_Total_BelowPovertyE, y = Gini_IndexE)) +
geom_point() +
facet_wrap(~County)
#relationship btw those who are rent burdened and rent tax ratio?
ggplot(ACS_Housing_Data, aes(x = RentTaxRatio, y = Rent_Burdened, color = County)) +
geom_jitter()
counties <- c("Albemarle", "Charlottesville", "Fluvanna", "Greene", "Louisa", "Nelson", "Richmond city", "Henrico", "Chesterfield", "Hopewell", "Petersburg")
countytracts <- tracts(state = "VA", county = counties, year = 2020)
countytracts <- countytracts |>
mutate(GEOID = as.numeric(countytracts$GEOID))
HousingDataSpatial <- full_join(ACS_Housing_Data, countytracts, by = "GEOID") |>
sf::st_as_sf() |>
mutate(INTPTLAT = as.numeric(countytracts$INTPTLAT), INTPTLON = as.numeric(countytracts$INTPTLON))|>
sf::st_transform(crs = '+proj=longlat +datum=WGS84') #one way to reference a CRS, another way (which Claibourne used) is cvl_rents <- st_transform(cvl_rents, 4326) because leaflet expects the crs to be 4326
pal <-  colorNumeric("YlOrRd", HousingDataSpatial$Perc_StudentsE, reverse = TRUE) #the reverse argument reverses the color palette
#pal1 <- colorNumeric("Greens", domain = HousingDataSpatial$County, HousingDataSpatial$County)
#creating map and adding layers
perc_student_counties <- c("Richmond City", "Charlottesville", "Henrico")
HousingDataSpatial %>%
filter(County %in% perc_student_counties) %>%
leaflet() %>%
addTiles() %>%
addPolygons(color = "black",
fillOpacity = 0.1,
weight = 2) %>%
addLabelOnlyMarkers(lng = ~INTPTLON, lat = ~INTPTLAT, label = ~NAME.y,
labelOptions = labelOptions(noHide = TRUE)) %>% #labels census tracts
addPolygons(stroke = FALSE, fillOpacity = 0.8,
smoothFactor = 0.5,
color = ~pal(Perc_StudentsE),
label = ~Perc_StudentsE,
highlight = highlightOptions(
weight = 3,
fillOpacity = 0.9,
bringToFront = T)) %>% #to add hovering functionality check what she put for the highlight argument and to add popups, check what she put for the popup argument
addLegend(pal = pal,
values = ~Perc_StudentsE,
opacity = 0.7,
title = "Highest Percentage of Students in Charlottesville and Richmond regions for 2020",
position = "bottomleft")
#ask soumya/claibourne why census tracts that aren't shaded ar being shown (esp since I filtered the dataframe)
HousingDataSpatial %>%
leaflet() %>%
addTiles() %>%
addPolygons(color = "black",
fillOpacity = 0.1,
weight = 2) %>%
addLabelOnlyMarkers(lng = ~INTPTLON, lat = ~INTPTLAT, label = ~NAME.y,
labelOptions = labelOptions(noHide = TRUE)) %>% #labels census tracts
addPolygons(stroke = FALSE, fillOpacity = 0.8,
smoothFactor = 0.5,
color = ~pal(PercRentBurdenE),
label = ~PercRentBurdenE,
highlight = highlightOptions(
weight = 3,
fillOpacity = 0.9,
bringToFront = T)) %>% #to add hovering functionality check what she put for the highlight argument and to add popups, check what she put for the popup argument
addLegend(pal = pal,
values = ~PercRentBurdenE,
opacity = 0.7,
title = "Percentage of Rent Burden (2020)",
position = "bottomleft")
HousingDataSpatial %>%
leaflet() %>%
addTiles() %>%
addPolygons(color = "black",
fillOpacity = 0.1,
weight = 2) %>%
addLabelOnlyMarkers(lng = ~INTPTLON, lat = ~INTPTLAT, label = ~NAME.y,
labelOptions = labelOptions(noHide = TRUE)) %>% #labels census tracts
addPolygons(stroke = FALSE, fillOpacity = 0.8,
smoothFactor = 0.5,
color = ~pal(PercRentBurdenE),
label = ~PercRentBurdenE,
highlight = highlightOptions(
weight = 3,
fillOpacity = 0.9,
bringToFront = T),
popup = paste0("County: ", cvl_rents$county, "<br>",
"Tract: ", cvl_rents$NAMELSAD, "<br>",
"Percentage of Rent Burden: ", round(cvl_rents$rent_tax_ratio, 2))) %>%
addLegend(pal = pal,
values = ~PercRentBurdenE,
opacity = 0.7,
title = "Percentage of Rent Burden (2020)",
position = "bottomleft")
View(HousingDataSpatial)
HousingDataSpatial %>%
leaflet() %>%
addTiles() %>%
addPolygons(color = "black",
fillOpacity = 0.1,
weight = 2) %>%
addLabelOnlyMarkers(lng = ~INTPTLON, lat = ~INTPTLAT, label = ~NAME.y,
labelOptions = labelOptions(noHide = TRUE)) %>% #labels census tracts
addPolygons(stroke = FALSE, fillOpacity = 0.8,
smoothFactor = 0.5,
color = ~pal(PercRentBurdenE),
label = ~PercRentBurdenE,
highlight = highlightOptions(
weight = 3,
fillOpacity = 0.9,
bringToFront = T),
popup = paste0("County: ", HousingDataSpatial$County, "<br>",
"Tract: ", HousingDataSpatial$NAMELSAD, "<br>",
"Percentage of Rent Burden: ", HousingDataSpatial$RentTaxRatio)) %>%
addLegend(pal = pal,
values = ~PercRentBurdenE,
opacity = 0.7,
title = "Percentage of Rent Burden (2020)",
position = "bottomleft")
HousingDataSpatial %>%
leaflet() %>%
addTiles() %>%
addPolygons(color = "black",
fillOpacity = 0.1,
weight = 2) %>%
addPolygons(stroke = FALSE, fillOpacity = 0.8,
smoothFactor = 0.5,
color = ~pal(PercRentBurdenE),
label = ~PercRentBurdenE,
highlight = highlightOptions(
weight = 3,
fillOpacity = 0.9,
bringToFront = T),
popup = paste0("County: ", HousingDataSpatial$County, "<br>",
"Tract: ", HousingDataSpatial$NAMELSAD, "<br>",
"Percentage of Rent Burden: ", HousingDataSpatial$RentTaxRatio)) %>%
addLegend(pal = pal,
values = ~PercRentBurdenE,
opacity = 0.7,
title = "Percentage of Rent Burden (2020)",
position = "bottomleft")
Tenure_and_Housing_Data  %>%
filter(Tenure_Type == "Renter") %>%
ggplot(aes(x = `Percentage (Estimated)`, y = PercRentBurdenE, color = Tenure_Type)) +
geom_smooth()
Tenure_and_Housing_Data  %>%
filter(Tenure_Type == "Renter") %>%
ggplot(aes(x = `Percentage (Estimated)`, y = PercRentBurdenE, color = Tenure_Type)) +
geom_point()
Tenure_and_Housing_Data  %>%
filter(Tenure_Type == "Renter") %>%
ggplot(aes(x = `Percentage (Estimated)`, y = PercRentBurdenE, color = Tenure_Type)) +
geom_point() +
facet_wrap(~Race)
Tenure_and_Housing_Data  %>%
filter(Tenure_Type == "Renter") %>%
ggplot(aes(x = `Percentage (Estimated)`, y = PercRentBurdenE, color = Tenure_Type)) +
geom_smooth() +
facet_wrap(~Race)
#relationship btw those who are rent burdened and rent tax ratio?
ggplot(ACS_Housing_Data, aes(x = RentTaxRatio, y = PercRentBurden, color = County)) +
geom_jitter()
#relationship btw those who are rent burdened and rent tax ratio?
ACS_Housing_Data %>%
ggplot(aes(x = RentTaxRatio, y = PercRentBurden, color = County)) +
geom_jitter()
#relationship btw those who are rent burdened and rent tax ratio?
ACS_Housing_Data %>%
ggplot(aes(x = RentTaxRatio, y = PercRentBurdenE, color = County)) +
geom_jitter()
#relationship btw those who are rent burdened and rent tax ratio?
ACS_Housing_Data %>%
ggplot(aes(x = PercRentBurdenE, y = RentTaxRatio, color = County)) +
geom_point()
#relationship btw those who are rent burdened and rent tax ratio?
ACS_Housing_Data %>%
ggplot(aes(x = PercRentBurdenE, y = RentTaxRatio)) +
geom_point() +
facet_wrap(~County)
#relationship btw those who are rent burdened and rent tax ratio?
Tenure_and_Housing_Data %>%
ggplot(aes(x = PercRentBurdenE, y = RentTaxRatio, color = County)) +
geom_point() +
facet_wrap(~Race)
#relationship btw those who are rent burdened and rent tax ratio?
Tenure_and_Housing_Data %>%
ggplot(aes(x = PercRentBurdenE, y = RentTaxRatio, color = County.y)) +
geom_point() +
facet_wrap(~Race)
#relationship btw those who are rent burdened and rent tax ratio?
Tenure_and_Housing_Data %>%
ggplot(aes(x = PercRentBurdenE, y = RentTaxRatio)) +
geom_smooth() +
facet_wrap(~County)
#relationship btw those who are rent burdened and rent tax ratio?
Tenure_and_Housing_Data %>%
ggplot(aes(x = PercRentBurdenE, y = RentTaxRatio)) +
geom_smooth() +
facet_wrap(~County.y)
Tenure_By_Race_Perc <- Tenure_By_Race %>%
mutate(Perc_rentersE = (RentersE/Total_OccupantsE), Perc_ownersE = (OwnersE/Total_OccupantsE)) %>%
group_by(County) %>%
summarize(Renters = median(Perc_rentersE, na.rm = TRUE), Owners = median(Perc_ownersE, na.rm = TRUE), White_Renters = median((White_rentersE/RentersE), na.rm = TRUE), White_Owners = median((White_ownersE/OwnersE), na.rm = TRUE), Black_Renters = median((Black_rentersE/RentersE), na.rm = TRUE), Black_Owners = median((Black_ownersE/OwnersE), na.rm = TRUE), NativeAm_Owners = median((NativeAm_ownersE/OwnersE), na.rm = TRUE), NativeAm_Renters = median((NativeAm_rentersE/RentersE), na.rm = TRUE),  Asian_Owners = median((Asian_ownersE/OwnersE), na.rm = TRUE), Asian_Renters = median((Asian_rentersE/RentersE), na.rm = TRUE), PacificIslander_Owners = median((PacificIslander_ownerE/OwnersE), na.rm = TRUE), PacificIslander_Renters = median((PacificIslander_renterE/RentersE), na.rm = TRUE), HispanicLatino_Owners = median((HispanicLatino_ownerE/OwnersE), na.rm = TRUE), HispanicLatino_Renters = median((HispanicLation_renterE/RentersE), na.rm = TRUE)) %>%
mutate(across(c(2:14), scales::percent)) %>%
arrange(desc(Renters)) %>%
select(1:3,4,6,9,11,13,15,5,7,8,10,12,14)
sketch = htmltools::withTags(table(
class = 'display',
thead(
tr(
th(rowspan = 2, 'County'),
th(colspan = 6, 'Renters'),
th(colspan = 6, 'Owners')
),
tr(
lapply(rep(c('White_Renters', 'Black_Renters', 'NativeAm_Renters', 'Asian_Renters', "PacificIslander_Renters", "HispanicLatino_Renters", 'White_Owners', 'Black_Owners', 'NativeAm_Owners', 'Asian_Owners', "PacificIslander_Owners", "HispanicLatino_Owners"), 2), th)
)
)
))
datatable(Tenure_By_Race_Perc[,c(1,4:15)],
caption = htmltools::tags$caption(
style = 'caption-side: bottom; text-align: center;',
'Table 1: ', htmltools::em('Median Percentage of Renters and Owners in Each County (by Demographics)')),
filter = 'top',
container = sketch,
rownames = FALSE)
View(Tenure_By_Race)
DT_Tenure_By_Race <- Tenure_By_Race_Perc[,c(1,4:15)]
datatable(DT_Tenure_By_Race,
caption = htmltools::tags$caption(
style = 'caption-side: bottom; text-align: center;',
'Table 1: ', htmltools::em('Median Percentage of Renters and Owners in Each County (by Demographics)')),
filter = 'top',
container = sketch,
rownames = FALSE)
datatable(DT_Tenure_By_Race,
caption = htmltools::tags$caption(
style = 'caption-side: bottom; text-align: center;',
'Table 1: ', htmltools::em('Median Percentage of Renters and Owners in Each County (by Demographics)')),
container = sketch,
rownames = FALSE)
datatable(DT_Tenure_By_Race,
caption = htmltools::tags$caption(
style = 'caption-side: bottom; text-align: center;',
'Table 1: ', htmltools::em('Median Percentage of Renters and Owners in Each County (by Demographics)')),
container = sketch,
rownames = FALSE,
extensions = 'Buttons',
options = list(dom='Bfrtip',
buttons=c('copy', 'csv', 'excel', 'print', 'pdf')
)
)
#install.packages("spatstat")
install.packages("sf")
install.packages("sf")
library(sf)
nc <- st_read(system.file("shape/nc.shp", package = "sf")) #data are in system file
str(nc)
head(nc)
plot(st_geometry(nc), border = 'grey', axes = TRUE)
rate79 <-nc$SID79/nc$BIR79*1000
nc2 <- cbind(nc, rate79)  #bind back into new objext usign the basic cbind
hist(nc2$rate79)
plot(nc, max.plot=15) #max.plot just lets R draw all 15 possible maps
plot(nc2["rate79"]) # note how we reference the variable to be mapped
bikes <- read.csv(choose.files())
bikes <- read.csv(choose.files())
class(bikes)
bikes <- st_as_sf((bikes, coords = c("X","Y"), crs=27700)
bikes <- st_as_sf(bikes, coords = c("X","Y"), crs=27700)
class(bikes)
plot(st_geometry(bikes), border = 'grey', axes=TRUE)
#transform to WGS84
bikes_84 <-st_transform(bikes, crs=4326)
#first, plot the data in OSGB36
plot(st_geometry(bikes), border = 'grey', axes=TRUE)
#now plot in WGS84 watch the points move!
plot(st_geometry(bikes_84), border = 'grey', axes=TRUE)
#first, plot the data in OSGB36
plot(st_geometry(bikes), border = 'grey', axes=TRUE)
#first, plot the data in OSGB36
plot(st_geometry(bikes), border = 'grey', axes=TRUE)
#now plot in WGS84 watch the points move!
plot(st_geometry(bikes_84), border = 'grey', axes=TRUE)
#first, plot the data in OSGB36
plot(st_geometry(bikes), border = 'grey', axes=TRUE)
#now plot in WGS84 watch the points move!
plot(st_geometry(bikes_84), border = 'grey', axes=TRUE)
#first, plot the data in OSGB36
plot(st_geometry(bikes), border = 'grey', axes=TRUE)
#now plot in WGS84 watch the points move!
plot(st_geometry(bikes_84), border = 'grey', axes=TRUE)
#first, plot the data in OSGB36
plot(st_geometry(bikes), border = 'grey', axes=TRUE)
#now plot in WGS84 watch the points move!
plot(st_geometry(bikes_84), border = 'grey', axes=TRUE)
#importing data
library(readr)
library(tidycensus)
library(tidyverse)
library(tigris)
library(leaflet)
library(sf)
library(DT)
ACS_Housing_Data <- read_csv("Housing_Data.csv")
Income_By_Tenure <- read_csv("Income_By_Tenure.csv")
Tenure <- read_csv("Tenure.csv")
Tenure_By_Income <- read_csv("Tenure_By_Income.csv")
Tenure_By_Race <- read_csv("Tenurebyrace.csv")
Poverty_By_Race <- read_csv("PovertyByRace.csv")
# Tenure <- Tenure[, 3:9]
# Tenure <- full_join(Tenure, Tenure_By_Race, by = "County_fips")
Tenure_By_Race_Perc <- Tenure_By_Race %>%
mutate(Perc_rentersE = (RentersE/Total_OccupantsE), Perc_ownersE = (OwnersE/Total_OccupantsE)) %>%
group_by(County) %>%
summarize(Renters = median(Perc_rentersE, na.rm = TRUE), Owners = median(Perc_ownersE, na.rm = TRUE), White_Renters = median((White_rentersE/RentersE), na.rm = TRUE), White_Owners = median((White_ownersE/OwnersE), na.rm = TRUE), Black_Renters = median((Black_rentersE/RentersE), na.rm = TRUE), Black_Owners = median((Black_ownersE/OwnersE), na.rm = TRUE), NativeAm_Owners = median((NativeAm_ownersE/OwnersE), na.rm = TRUE), NativeAm_Renters = median((NativeAm_rentersE/RentersE), na.rm = TRUE),  Asian_Owners = median((Asian_ownersE/OwnersE), na.rm = TRUE), Asian_Renters = median((Asian_rentersE/RentersE), na.rm = TRUE), PacificIslander_Owners = median((PacificIslander_ownerE/OwnersE), na.rm = TRUE), PacificIslander_Renters = median((PacificIslander_renterE/RentersE), na.rm = TRUE), HispanicLatino_Owners = median((HispanicLatino_ownerE/OwnersE), na.rm = TRUE), HispanicLatino_Renters = median((HispanicLation_renterE/RentersE), na.rm = TRUE)) %>%
mutate(across(c(2:14), scales::percent)) %>%
arrange(desc(Renters)) %>%
select(1:3,4,6,9,11,13,15,5,7,8,10,12,14)
sketch = htmltools::withTags(table(
class = 'display',
thead(
tr(
th(rowspan = 2, 'County'),
th(colspan = 6, 'Renters'),
th(colspan = 6, 'Owners')
),
tr(
lapply(rep(c('White_Renters', 'Black_Renters', 'NativeAm_Renters', 'Asian_Renters', "PacificIslander_Renters", "HispanicLatino_Renters", 'White_Owners', 'Black_Owners', 'NativeAm_Owners', 'Asian_Owners', "PacificIslander_Owners", "HispanicLatino_Owners"), 2), th)
)
)
))
DT_Tenure_By_Race <- Tenure_By_Race_Perc[,c(1,4:15)]
datatable(DT_Tenure_By_Race,
caption = htmltools::tags$caption(
style = 'caption-side: bottom; text-align: center;',
'Table 1: ', htmltools::em('Median Percentage of Renters and Owners in Each County (by Demographics)')),
container = sketch,
rownames = FALSE,
extensions = 'Buttons',
options = list(dom='Bfrtip',
buttons=c('copy', 'csv', 'excel', 'print', 'pdf')
)
)
#extra columns being shown??
#how to make data mpt extend screen and show on next page
#data dissappears when I add filter at the top?
